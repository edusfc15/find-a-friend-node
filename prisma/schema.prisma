// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  checkIns CheckIn[]

  @@map("users")
}

model Pet {
  id          String   @id @default(cuid())
  name        String
  age         Int
  description String
  city        String
  state       String
  species     String
  breed       String
  imageUrl    String
  adpotedAt   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  org         Org      @relation(fields: [orgId], references: [id])
  orgId       String

  @@map("pets")
}

model Org {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  address   String
  whatsapp  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pets      Pet[]

  @@map("orgs")
}


model CheckIn {
  id           String    @id @default(uuid())
  created_at   DateTime  @default(now())
  validated_at DateTime?

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  gym    Gym    @relation(fields: [gym_id], references: [id])
  gym_id String

  @@map("check_ins")
}

model Gym {
  id          String  @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal

  checkIns CheckIn[]

  @@map("gyms")
}